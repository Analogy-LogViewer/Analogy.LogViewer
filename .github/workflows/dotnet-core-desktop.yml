name: .NET Core Desktop

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to 
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Analogy.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.     
      Test_Project_Path: Analogy.UnitTests\Analogy.UnitTests.csproj
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Write key file
      run: |
           echo "${{ secrets.AUTH }}" | base64 -di > ./Installer/Installer_TemporaryKey.pfx

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.202

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
   
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    
    # Buid the application 
    - name: Build the application
      run: msbuild $env:Solution_Name /t:Rebuild /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    # Execute all unit tests in the solution
    #- name: Execute unit tests
    # run: dotnet test

    - name: Delete key file
      run: |
       rm  ./Installer/Installer_TemporaryKey.pfx


    # Publish Artifacts 
  # - name: 'Publish Artifacts'
  #   uses: actions/upload-artifact@v1.0.0
  #   with:
  #     name: Analogy_Artifacts_${{ matrix.configuration }}
  #     path: ./Analogy/bin/${{ matrix.configuration }}
