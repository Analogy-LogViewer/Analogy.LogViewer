<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v19.1" name="DevExpress.Utils.v19.1, Version=19.1.9.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v19.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxOC4xLCBWZXJzaW9uPTE4LjEu
        Ni4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAAILAAAC8gIAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAKpSURBVDhPpZNtSFNxFMaviuVLBVFUVloEglDQh6KgoEyTmS+rlo5ZGmrYzA+CCqWlaaQwqLRU
        xFGaWpY6M9MMdaZMZ01Q6AWlfElNS5tOzWVoaU/nzFkQfhD6wwP3z+X3POeec64A4L/077EgWZrFz0s7
        uky5a0umHLr0MLxIOwPt9WBUXpaK6JWlOslfqImXCFWxYqEixkt4HCkSVBHuQlHYgXmYjoUuPbx+oqsS
        v4ytmJtsgaFDhdorMg29syMtJ9mQbM13e9IK850rFSw5+VXeeTQqTqMh5STqEqVQJ0lRHS9B1QUxKBmU
        jNIIN1AyCkP2Qynb/ZJYNhSsmtNCKVmHuYlmzI41YnbkOX7qqzEzVIHpgUf43vsQU115MLYrMd6SjFFN
        HHJlu7iDq9nAWnstmGAtZvqyMdOTgenOVEx1KPDt9VV8bUvAuC4WBk0UhmvkGCiRYFgdhTt+O9lgLRss
        0yiCMGto+Au3K2B8swDHmWB9XQQGS/3QWyjG56pwKI9uZ4N1bGBTnxxAJasXgeeT9XXnMFgmRR/BPfle
        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
        RU5ErkJgggs=
</value>
  </data>
</root>