<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rtxtbChangeLog.Text" xml:space="preserve">
    <value>2019.08.19 - First release as open source tool.
2019.07.09 - Added: take screenshot of the messages control.
2019.07.09 - Added: more information to log data source.
2019.07.03 - Added: Real time event viewer: add Philips specific logs to list.
2019.06.24 - Change: Splunk export datetime normalization.
2019.06.19 - Change: Splunk export improvements.
2019.06.15 - Added: New feature: fix corrupted files.
2019.06.14 - Added: Export to xlsx format as default (instead of xls).
2019.06.13 - Added: New timeline Vizualizer feature.
2019.06.02 - Added: Splunk support for different zip folder structure. 
2019.06.01 - Changes: Harmonized look and feel of UI.
2019.05.31 - Changes: Splunk improvements and fixes of old defects in the old splunk converter app.
2019.05.28 - Fixed: Performance improvement for paging mechanism.
2019.05.25 - Fixes: CT logs related improvements and fixes
2019.05.22 - Changes: Event viewer improvements.
2019.05.20 - Fixed: some messages' parsing is partial.
2019.05.18 - Added: Paging mechanism for better performance.
2019.05.18 - Added: font size  settings.
2019.05.16 - Fixed: Go to message sometimes missed the currently selected message
2019.05.16 - Added: Export to Excel/CSV and added undock current view
2019.05.15 - Added: Paging mechanism (Page size is user defined)
2019.05.15 - Fixed: Under some conditions not all text of the message was being displayed.
2019.05.12 - Added: Auto scroll to last message.
2019.05.12 - Added: Support for Windows Event viewer log files.
2019.05.12 - Added: Log Comparer (under tools).
2019.05.10 - Added: Support for PHILIPS CT BU real time read (SQL Database)
2019.05.09 - Added: Additional User setting options
2019.05.08 - Added: Support for MIRADA XD log file formats
2019.05.07 - Added: Support for PHILIPS CT BU log file formats
2019.05.06 - Added: Copy bookmarks messages to clipboard.
2019.05.05 - Added: Copy all messages to clipboard.
2019.05.04 - Added: Splunk bugrep extractor cancellation support
2019.05.03 - Fixed: Column Layout setting file location was not set to app assembly location.
2019.05.02 - Added: Analogy Splunk Bugrep extractor (V1).
2019.04.28 - Fixed: NullReferenceException under some condition (real time mode)
2019.04.27 - Added: Ability to cancel loading of files. 
2019.04.26 - Change: More UI Unification
2019.04.21 - Added: User setting - auto startup of extensions
2019.04.18 - Fixed: History of messages and other fixes.
2019.04.13 - Added: Analogy Simple View (User setting).
2019.04.13 - Added: Persistant bookmark between runs.
2019.04.07 - Added: indication of when file has empty messages or corrupted.
2019.04.06 - Added: Columns layout can now be save (right click on any massage).
2019.04.05 - Changes: more user feadback for some operations
2019.03.31 - Added: Feature: new data sources (client/sever/folders)
2019.03.31 - Changes: Reduced memory print of Analogy.EXE
2019.03.30 - Added: support for themes (dark mode)
2019.03.30 - Added: User Statistics
2019.03.29 - Added: Most Recent used files
2019.03.29 - Added: Message Clear History
2019.03.29 - Added: User settings
2019.03.27 - Added: Grouping by substrings
2019.03.15 - Added: Support for NLOG files
2019.03.15 - Added: Support for JSON files
2019.02.22 - Added: Support for SQL reserved words in filter queries
2019.02.22 - Changes: bug fixes and performance improvements
2019.02.18 - Fixed: High CPU Usage when connection is broken to log service
2019.02.15 - Added: Extensions framework and UI redesign - User Control extension
2019.02.11 - Added: Extensions framework and UI redesign - In Place extension
2019.02.09 - Added: Extensions framework and UI redesign
2019.01.25 - Added: Highlight lines + exclude module/Source
2019.01.03 - Change: double click on messages now open the messages instead of adding it to the bookmarks.
2018.12.31 - Fixes: bug fixes and improvements
2018.12.22 - Added: New feature: Bookmark of messages.
2018.12.20 - change: Better response time of loading data.
2018.12.20 - Added: New feature: Statistics Analyzer.
2018.12.18 - Test: NFT test of 7 GB data and related changes
2018.12.18 - Change: switching to 64 bit version.
2018.12.17 - Change: Sending logs over WCF is now locked
2018.12.17 - Add: Additional Filtering Options
2018.12.15 - Bug Fix: Pause logs does nothing.
2018.12.14 - Added: Exclude Source and modules (use , or | to seperate items)
2018.12.14 - Performance: faster filtering or results
2018.12.14 - Fixed: More complex SQL queries are allowed.
2018.12.13 - Added: Folders Tree view
2018.12.13 - Added: Ctrl + A shortcut for file listing
2018.12.13 - Fixed: some small UI bugs.
2018.12.12 - Added: adding loading progress bar to indicate files are loading (log file takes time)
2018.12.12 - Change: switching to non blocking UI operations
2018.12.09 - Change: UI changes
2018.12.07 - Fixed: WCF related fixes and changes
2018.12.01 - Fixes: General bugs
2018.11.30 - Added: Preserve selection in grid when filtering.
2018.11.29 - Improving load time of logs files.
2018.11.27 - Initial commit.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAB/mRCHnxOPphWXrBifsxqmuR2uvx+2xSK+zCTG0ifO2CnW3ivd5S7m6zHt8TP19zVcfgZkhAhsigp0
        kQ18lw+EnRKLoxSTqhebsBmjthyrvB6zwyG7ySPDzybL1ijT3Co5YgBBaAFJbwFRdQNZewVhggdpiAlw
        jgx5lA6AmxGIoROQpxaYrhigtBuouh2wwCAWRgAeTQAmUwAuWQA2YAA+ZgBGbAFOcgJVeQRdfwZlhQht
        jAt1kg19mBCFnhKNpRUBKwADMQAHNwAMPgATRAAbSgAjUAArVwAzXQA7YwBDagFLcAJSdgNafAVigwdq
        iQoAEwAAFgAAHAAAIgAAKAACLwAFNQAKOwAQQQAYSAAgTgAoVAAwWwA4YQA/ZwBHbQEADwAADwAADwAA
        EAAAEgAAFQAAGgAAHwAAJgABLAADMgAHOQANPwAVRQAdSwAlUgAADwAADwAADwAADwAADwAADwAADwAA
        EAAAEQAAEwAAGAAAHQAAIwABKgACMAAFNgAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAA
        DwAAEAAAEgAAFgAAGwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAwDDpmCXsXDhs7DEYA
        DwBXCmkpDTFfCXNVCmZLC1o7DEh4CJBcCm9XCml0CItuCIRGC1V+B5hfCXOBB5oUDhg2DEGTBbFhCXSA
        B5p6B5JyCIkzDD12B49/B5h3B49/B5h5CJE5DEVqCIB9CJZlCXkBDwKuBNETDhcuDDdBC04LDw1HC1Ym
        DS1xCIgyDDwsDTUUDhhFC1MvDDgVDhklDSwADwAADwAADwAADwAADwAADwAADwAADwAIDwkADwAADwAA
        DwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAA
        DwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAADwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>